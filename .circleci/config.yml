defaults: &defaults
  docker:
    - image: circleci/node:8
  working_directory: ~/tv-automation-mos-connection

version: 2
jobs:
  checkout_code:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/tv-automation-mos-connection
      - restore_cache:
          keys:
            - yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-{{ .Branch }}
            - yarn-cache-
      - run: yarn install
      - save_cache:
          key: yarn-cache-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths: [node_modules]
      - persist_to_workspace:
          root: .
          paths: [.]
  check_vulnerabilities:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tv-automation-mos-connection
      - run: yarn install
      - run: yarn validate:dependencies
  test_node-8:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tv-automation-mos-connection
      - run: yarn install
      - run: yarn ci
  send-coverage:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tv-automation-mos-connection
      - run: yarn install
      - run: yarn send-coverage
      - store_artifacts:
          path: ./coverage/clover.xml
          prefix: tests
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: ./coverage/clover.xml

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tv-automation-mos-connection
      - run: yarn install
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths: [.]

  release:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tv-automation-mos-connection
      - add_ssh_keys:
          fingerprints:
            - "fe:e8:83:0c:e9:a3:83:47:db:a9:f4:ce:a3:1f:7e:28"
      - run: yarn install
      - run: mkdir -p ~/.ssh
      - run:
          name: Keyscan Github
          command: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run: git config --global user.email "jesper@starkar.no"
      - run: git config --global user.name "jesperstarkar"
      - run: yarn release
      - run: git push --follow-tags origin HEAD
      - persist_to_workspace:
          root: .
          paths: [.]
  deployToNPM:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/tv-automation-mos-connection
      - run:
          name: Write NPM Token to ~/.npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publish to NPM with yarn
          command: NEW_VERSION=$(node -p "require('./package.json').version") && yarn publish --access=public --new-version=$NEW_VERSION
      - deploy:
          name: Publish to NPM with npm
          command: npm publish --access=public
      - persist_to_workspace:
          root: .
          paths: [.]

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - checkout_code
      - check_vulnerabilities:
          requires:
            - checkout_code
      - test_node-8:
          requires:
            - checkout_code
      - send-coverage:
          requires:
            - check_vulnerabilities
            - test_node-8
          filters:
            branches:
              only:
                - master
      - release:
          requires:
            - send-coverage
          filters:
            branches:
              only:
                - master
      - build:
          requires:
            - send-coverage
            - release
          filters:
            branches:
              only:
                - master
      - deployToNPM:
          requires:
            - build
          filters:
            branches:
              only:
                - master
  manual_release:
    jobs:
      - manualRelease:
          type: approval
          filters:
            branches:
              ignore:
                - master
      - checkout_code:
          requires:
            - manualRelease
      - check_vulnerabilities:
          requires:
            - checkout_code
      - test_node-8:
          requires:
            - checkout_code
      - send-coverage:
          requires:
            - check_vulnerabilities
            - test_node-8
      - release:
          requires:
            - checkout_code
            - send-coverage
      - build:
          requires:
            - release
      - deployToNPM:
          requires:
            - build
